# @generated by gh-actions-gen, do not edit

---
"on":
  - push
  - pull_request
name: Jobs
jobs:
  linux-stable:
    name: linux stable
    runs-on: ubuntu-latest
    env:
      PROTOBUF_VERSION: 3.1.0
      RUST_BACKTRACE: "1"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: install protobuf
        run: "./ci/install-protobuf.sh"
        shell: bash
      - name: run
        run: ci/run.sh
        shell: bash
  macos-stable:
    name: macos stable
    runs-on: macos-latest
    env:
      PROTOBUF_VERSION: 3.1.0
      RUST_BACKTRACE: "1"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: install protobuf
        run: "./ci/install-protobuf.sh"
        shell: bash
      - name: run
        run: ci/run.sh
        shell: bash
  linux-beta:
    name: linux beta
    runs-on: ubuntu-latest
    env:
      PROTOBUF_VERSION: 3.1.0
      RUST_BACKTRACE: "1"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: beta
          override: true
      - name: install protobuf
        run: "./ci/install-protobuf.sh"
        shell: bash
      - name: run
        run: ci/run.sh
        shell: bash
  linux-nightly:
    name: linux nightly
    runs-on: ubuntu-latest
    env:
      PROTOBUF_VERSION: 3.1.0
      RUST_BACKTRACE: "1"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: install protobuf
        run: "./ci/install-protobuf.sh"
        shell: bash
      - name: run
        run: ci/run.sh
        shell: bash
  macos-nightly:
    name: macos nightly
    runs-on: macos-latest
    env:
      PROTOBUF_VERSION: 3.1.0
      RUST_BACKTRACE: "1"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: install protobuf
        run: "./ci/install-protobuf.sh"
        shell: bash
      - name: run
        run: ci/run.sh
        shell: bash
  test-protoc-plugin:
    name: test-protoc-plugin
    runs-on: ubuntu-latest
    env:
      PROTOBUF_VERSION: 3.1.0
      RUST_BACKTRACE: "1"
    steps:
      - name: cargo cache
        uses: actions/cache@v2
        with:
          path: "~/.cargo/registry\n~/.cargo/git\n"
          key: "${{ runner.os }}-cargo-2"
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: install protobuf
        run: "./ci/install-protobuf.sh"
        shell: bash
      - name: install protobuf-codegen
        run: cargo install protobuf-codegen --version=2.18.2
        shell: bash
      - name: gen
        run: grpc-compiler/test-protoc-plugin/gen.sh
        shell: bash
      - name: check
        run: cargo check --manifest-path grpc-compiler/test-protoc-plugin/Cargo.toml
        shell: bash
  cargo-doc:
    name: cargo doc
    runs-on: ubuntu-latest
    env:
      PROTOBUF_VERSION: 3.1.0
      RUST_BACKTRACE: "1"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: install protobuf
        run: "./ci/install-protobuf.sh"
        shell: bash
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: cargo doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
  super-linter:
    name: super-linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: super-linter
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: "false"
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          VALIDATE_JSCPD: "false"
          VALIDATE_PROTOBUF: "false"
          VALIDATE_RUST_2015: "false"
          VALIDATE_RUST_2018: "false"
          VALIDATE_RUST_CLIPPY: "false"
